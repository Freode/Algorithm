// 골드 2 - 1738번 : 골목길
// 작성자 : free4760(jeonghoe22)

#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

// 금품 + or -
// 해당 라인 중복 이동 시, 증가 및 감소 진행

// 금품 -> 음수 유지 가능
// 집 -> 콘도 : 금품의 양 최대

// 교차 지점 : n 2~100
// 골목길 : m 1~20'000
// 출발 도착으로 주어짐(단방향)
// 금품 +- : -1'000 ~ 1'000
// 음수 : 갈취, 양수 : 획득

// 콘도 도착 시, 금품이 최대가 되는 교차 지점 경로 출력
// 최적의 경로가 없는 경우는 -1 -> 사이클이 발생해 무한 루프 타는 경우
 
// 일반적인 상황 -> 우선순위 큐(낮은 순서대로 실행)? BFS?

// 사이클 판단 -> 현재 교차 지점에 이전 교차 지점을 기록
// 이동했을 때, 이전 교차 지점이 갱신되지 않는다면, 사이클 발생
// 사이클 발생 시, -1로 기록
// 경로 역추적할 때, -1을 발견하면, -1만 출력

int main()
{
    // 입출력 최적화
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    cout.tie(nullptr);

    // 교차 지점 n, 골목길 m
    int n, m;
    cin >> n >> m;



}